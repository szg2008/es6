{"version":3,"sources":["source-map-generator.js"],"names":[],"mappings":"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","file":"source-map-generator-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n"]}