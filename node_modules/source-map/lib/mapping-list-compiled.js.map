{"version":3,"sources":["mapping-list.js"],"names":[],"mappings":";;AAAA;AACA;;;;;;AAMA,IAAI,OAAO,QAAQ,QAAR,CAAX;;AAEA;;;;AAIA,SAAS,sBAAT,CAAgC,QAAhC,EAA0C,QAA1C,EAAoD;AAClD;AACA,MAAI,QAAQ,SAAS,aAArB;AACA,MAAI,QAAQ,SAAS,aAArB;AACA,MAAI,UAAU,SAAS,eAAvB;AACA,MAAI,UAAU,SAAS,eAAvB;AACA,SAAO,QAAQ,KAAR,IAAiB,SAAS,KAAT,IAAkB,WAAW,OAA9C,IACA,KAAK,mCAAL,CAAyC,QAAzC,EAAmD,QAAnD,KAAgE,CADvE;AAED;;AAED;;;;;AAKA,SAAS,WAAT,GAAuB;AACrB,OAAK,MAAL,GAAc,EAAd;AACA,OAAK,OAAL,GAAe,IAAf;AACA;AACA,OAAK,KAAL,GAAa,EAAC,eAAe,CAAC,CAAjB,EAAoB,iBAAiB,CAArC,EAAb;AACD;;AAED;;;;;;AAMA,YAAY,SAAZ,CAAsB,eAAtB,GACE,SAAS,mBAAT,CAA6B,SAA7B,EAAwC,QAAxC,EAAkD;AAChD,OAAK,MAAL,CAAY,OAAZ,CAAoB,SAApB,EAA+B,QAA/B;AACD,CAHH;;AAKA;;;;;AAKA,YAAY,SAAZ,CAAsB,GAAtB,GAA4B,SAAS,eAAT,CAAyB,QAAzB,EAAmC;AAC7D,MAAI,uBAAuB,KAAK,KAA5B,EAAmC,QAAnC,CAAJ,EAAkD;AAChD,SAAK,KAAL,GAAa,QAAb;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB;AACD,GAHD,MAGO;AACL,SAAK,OAAL,GAAe,KAAf;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB;AACD;AACF,CARD;;AAUA;;;;;;;;;AASA,YAAY,SAAZ,CAAsB,OAAtB,GAAgC,SAAS,mBAAT,GAA+B;AAC7D,MAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,mCAAtB;AACA,SAAK,OAAL,GAAe,IAAf;AACD;AACD,SAAO,KAAK,MAAZ;AACD,CAND;;AAQA,QAAQ,WAAR,GAAsB,WAAtB","file":"mapping-list-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n"]}