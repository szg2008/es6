{"version":3,"sources":["base64.js"],"names":[],"mappings":";;AAAA;AACA;;;;;;AAMA,IAAI,eAAe,mEAAmE,KAAnE,CAAyE,EAAzE,CAAnB;;AAEA;;;AAGA,QAAQ,MAAR,GAAiB,UAAU,MAAV,EAAkB;AACjC,MAAI,KAAK,MAAL,IAAe,SAAS,aAAa,MAAzC,EAAiD;AAC/C,WAAO,aAAa,MAAb,CAAP;AACD;AACD,QAAM,IAAI,SAAJ,CAAc,+BAA+B,MAA7C,CAAN;AACD,CALD;;AAOA;;;;AAIA,QAAQ,MAAR,GAAiB,UAAU,QAAV,EAAoB;AACnC,MAAI,OAAO,EAAX,CADmC,CAChB;AACnB,MAAI,OAAO,EAAX,CAFmC,CAEhB;;AAEnB,MAAI,UAAU,EAAd,CAJmC,CAIhB;AACnB,MAAI,UAAU,GAAd,CALmC,CAKhB;;AAEnB,MAAI,OAAO,EAAX,CAPmC,CAOhB;AACnB,MAAI,OAAO,EAAX,CARmC,CAQhB;;AAEnB,MAAI,OAAO,EAAX,CAVmC,CAUhB;AACnB,MAAI,QAAQ,EAAZ,CAXmC,CAWhB;;AAEnB,MAAI,eAAe,EAAnB;AACA,MAAI,eAAe,EAAnB;;AAEA;AACA,MAAI,QAAQ,QAAR,IAAoB,YAAY,IAApC,EAA0C;AACxC,WAAQ,WAAW,IAAnB;AACD;;AAED;AACA,MAAI,WAAW,QAAX,IAAuB,YAAY,OAAvC,EAAgD;AAC9C,WAAQ,WAAW,OAAX,GAAqB,YAA7B;AACD;;AAED;AACA,MAAI,QAAQ,QAAR,IAAoB,YAAY,IAApC,EAA0C;AACxC,WAAQ,WAAW,IAAX,GAAkB,YAA1B;AACD;;AAED;AACA,MAAI,YAAY,IAAhB,EAAsB;AACpB,WAAO,EAAP;AACD;;AAED;AACA,MAAI,YAAY,KAAhB,EAAuB;AACrB,WAAO,EAAP;AACD;;AAED;AACA,SAAO,CAAC,CAAR;AACD,CA3CD","file":"base64-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n"]}