{"version":3,"sources":["config.js"],"names":[],"mappings":"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","file":"config-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = {\n  filename: {\n    type: \"filename\",\n    description: \"filename to use when reading from stdin - this will be used in source-maps, errors etc\",\n    default: \"unknown\",\n    shorthand: \"f\"\n  },\n\n  filenameRelative: {\n    hidden: true,\n    type: \"string\"\n  },\n\n  inputSourceMap: {\n    hidden: true\n  },\n\n  env: {\n    hidden: true,\n    default: {}\n  },\n\n  mode: {\n    description: \"\",\n    hidden: true\n  },\n\n  retainLines: {\n    type: \"boolean\",\n    default: false,\n    description: \"retain line numbers - will result in really ugly code\"\n  },\n\n  highlightCode: {\n    description: \"enable/disable ANSI syntax highlighting of code frames (on by default)\",\n    type: \"boolean\",\n    default: true\n  },\n\n  suppressDeprecationMessages: {\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n\n  presets: {\n    type: \"list\",\n    description: \"\",\n    default: []\n  },\n\n  plugins: {\n    type: \"list\",\n    default: [],\n    description: \"\"\n  },\n\n  ignore: {\n    type: \"list\",\n    description: \"list of glob paths to **not** compile\",\n    default: []\n  },\n\n  only: {\n    type: \"list\",\n    description: \"list of glob paths to **only** compile\"\n  },\n\n  code: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  metadata: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  ast: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  extends: {\n    type: \"string\",\n    hidden: true\n  },\n\n  comments: {\n    type: \"boolean\",\n    default: true,\n    description: \"write comments to generated output (true by default)\"\n  },\n\n  shouldPrintComment: {\n    hidden: true,\n    description: \"optional callback to control whether a comment should be inserted, when this is used the comments option is ignored\"\n  },\n\n  wrapPluginVisitorMethod: {\n    hidden: true,\n    description: \"optional callback to wrap all visitor methods\"\n  },\n\n  compact: {\n    type: \"booleanString\",\n    default: \"auto\",\n    description: \"do not include superfluous whitespace characters and line terminators [true|false|auto]\"\n  },\n\n  minified: {\n    type: \"boolean\",\n    default: false,\n    description: \"save as much bytes when printing [true|false]\"\n  },\n\n  sourceMap: {\n    alias: \"sourceMaps\",\n    hidden: true\n  },\n\n  sourceMaps: {\n    type: \"booleanString\",\n    description: \"[true|false|inline]\",\n    default: false,\n    shorthand: \"s\"\n  },\n\n  sourceMapTarget: {\n    type: \"string\",\n    description: \"set `file` on returned source map\"\n  },\n\n  sourceFileName: {\n    type: \"string\",\n    description: \"set `sources[0]` on returned source map\"\n  },\n\n  sourceRoot: {\n    type: \"filename\",\n    description: \"the root from which all sources are relative\"\n  },\n\n  babelrc: {\n    description: \"Whether or not to look up .babelrc and .babelignore files\",\n    type: \"boolean\",\n    default: true\n  },\n\n  sourceType: {\n    description: \"\",\n    default: \"module\"\n  },\n\n  auxiliaryCommentBefore: {\n    type: \"string\",\n    description: \"print a comment before any injected non-user code\"\n  },\n\n  auxiliaryCommentAfter: {\n    type: \"string\",\n    description: \"print a comment after any injected non-user code\"\n  },\n\n  resolveModuleSource: {\n    hidden: true\n  },\n\n  getModuleId: {\n    hidden: true\n  },\n\n  moduleRoot: {\n    type: \"filename\",\n    description: \"optional prefix for the AMD module formatter that will be prepend to the filename on module definitions\"\n  },\n\n  moduleIds: {\n    type: \"boolean\",\n    default: false,\n    shorthand: \"M\",\n    description: \"insert an explicit id for modules\"\n  },\n\n  moduleId: {\n    description: \"specify a custom name for module ids\",\n    type: \"string\"\n  },\n\n  passPerPreset: {\n    description: \"Whether to spawn a traversal pass per a preset. By default all presets are merged.\",\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n\n  parserOpts: {\n    description: \"Options to pass into the parser, or to change parsers (parserOpts.parser)\",\n    default: false\n  },\n\n  generatorOpts: {\n    description: \"Options to pass into the generator, or to change generators (generatorOpts.generator)\",\n    default: false\n  }\n};"]}