{"version":3,"sources":["pipeline.js"],"names":[],"mappings":"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","file":"pipeline-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _normalizeAst = require(\"../helpers/normalize-ast\");\n\nvar _normalizeAst2 = _interopRequireDefault(_normalizeAst);\n\nvar _plugin = require(\"./plugin\");\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _file = require(\"./file\");\n\nvar _file2 = _interopRequireDefault(_file);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Pipeline = function () {\n  function Pipeline() {\n    (0, _classCallCheck3.default)(this, Pipeline);\n  }\n\n  Pipeline.prototype.lint = function lint(code) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    opts.code = false;\n    opts.mode = \"lint\";\n    return this.transform(code, opts);\n  };\n\n  Pipeline.prototype.pretransform = function pretransform(code, opts) {\n    var file = new _file2.default(opts, this);\n    return file.wrap(code, function () {\n      file.addCode(code);\n      file.parseCode(code);\n      return file;\n    });\n  };\n\n  Pipeline.prototype.transform = function transform(code, opts) {\n    var file = new _file2.default(opts, this);\n    return file.wrap(code, function () {\n      file.addCode(code);\n      file.parseCode(code);\n      return file.transform();\n    });\n  };\n\n  Pipeline.prototype.analyse = function analyse(code) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var visitor = arguments[2];\n\n    opts.code = false;\n    if (visitor) {\n      opts.plugins = opts.plugins || [];\n      opts.plugins.push(new _plugin2.default({ visitor: visitor }));\n    }\n    return this.transform(code, opts).metadata;\n  };\n\n  Pipeline.prototype.transformFromAst = function transformFromAst(ast, code, opts) {\n    ast = (0, _normalizeAst2.default)(ast);\n\n    var file = new _file2.default(opts, this);\n    return file.wrap(code, function () {\n      file.addCode(code);\n      file.addAst(ast);\n      return file.transform();\n    });\n  };\n\n  return Pipeline;\n}();\n\nexports.default = Pipeline;\nmodule.exports = exports[\"default\"];"]}