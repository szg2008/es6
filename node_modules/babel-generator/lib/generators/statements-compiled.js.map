{"version":3,"sources":["statements.js"],"names":[],"mappings":"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","file":"statements-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.ThrowStatement = exports.BreakStatement = exports.ReturnStatement = exports.ContinueStatement = exports.ForAwaitStatement = exports.ForOfStatement = exports.ForInStatement = undefined;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.WithStatement = WithStatement;\nexports.IfStatement = IfStatement;\nexports.ForStatement = ForStatement;\nexports.WhileStatement = WhileStatement;\nexports.DoWhileStatement = DoWhileStatement;\nexports.LabeledStatement = LabeledStatement;\nexports.TryStatement = TryStatement;\nexports.CatchClause = CatchClause;\nexports.SwitchStatement = SwitchStatement;\nexports.SwitchCase = SwitchCase;\nexports.DebuggerStatement = DebuggerStatement;\nexports.VariableDeclaration = VariableDeclaration;\nexports.VariableDeclarator = VariableDeclarator;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction WithStatement(node) {\n  this.word(\"with\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.object, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction IfStatement(node) {\n  this.word(\"if\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.space();\n\n  var needsBlock = node.alternate && t.isIfStatement(getLastStatement(node.consequent));\n  if (needsBlock) {\n    this.token(\"{\");\n    this.newline();\n    this.indent();\n  }\n\n  this.printAndIndentOnComments(node.consequent, node);\n\n  if (needsBlock) {\n    this.dedent();\n    this.newline();\n    this.token(\"}\");\n  }\n\n  if (node.alternate) {\n    if (this.endsWith(\"}\")) this.space();\n    this.word(\"else\");\n    this.space();\n    this.printAndIndentOnComments(node.alternate, node);\n  }\n}\n\nfunction getLastStatement(statement) {\n  if (!t.isStatement(statement.body)) return statement;\n  return getLastStatement(statement.body);\n}\n\nfunction ForStatement(node) {\n  this.word(\"for\");\n  this.space();\n  this.token(\"(\");\n\n  this.inForStatementInitCounter++;\n  this.print(node.init, node);\n  this.inForStatementInitCounter--;\n  this.token(\";\");\n\n  if (node.test) {\n    this.space();\n    this.print(node.test, node);\n  }\n  this.token(\";\");\n\n  if (node.update) {\n    this.space();\n    this.print(node.update, node);\n  }\n\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction WhileStatement(node) {\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nvar buildForXStatement = function buildForXStatement(op) {\n  return function (node) {\n    this.word(\"for\");\n    this.space();\n    if (op === \"await\") {\n      this.word(\"await\");\n      this.space();\n      op = \"of\";\n    }\n    this.token(\"(\");\n\n    this.print(node.left, node);\n    this.space();\n    this.word(op);\n    this.space();\n    this.print(node.right, node);\n    this.token(\")\");\n    this.printBlock(node);\n  };\n};\n\nvar ForInStatement = exports.ForInStatement = buildForXStatement(\"in\");\nvar ForOfStatement = exports.ForOfStatement = buildForXStatement(\"of\");\nvar ForAwaitStatement = exports.ForAwaitStatement = buildForXStatement(\"await\");\n\nfunction DoWhileStatement(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n  this.space();\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.semicolon();\n}\n\nfunction buildLabelStatement(prefix) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"label\";\n\n  return function (node) {\n    this.word(prefix);\n\n    var label = node[key];\n    if (label) {\n      this.space();\n\n      var terminatorState = this.startTerminatorless();\n      this.print(label, node);\n      this.endTerminatorless(terminatorState);\n    }\n\n    this.semicolon();\n  };\n}\n\nvar ContinueStatement = exports.ContinueStatement = buildLabelStatement(\"continue\");\nvar ReturnStatement = exports.ReturnStatement = buildLabelStatement(\"return\", \"argument\");\nvar BreakStatement = exports.BreakStatement = buildLabelStatement(\"break\");\nvar ThrowStatement = exports.ThrowStatement = buildLabelStatement(\"throw\", \"argument\");\n\nfunction LabeledStatement(node) {\n  this.print(node.label, node);\n  this.token(\":\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction TryStatement(node) {\n  this.word(\"try\");\n  this.space();\n  this.print(node.block, node);\n  this.space();\n\n  if (node.handlers) {\n    this.print(node.handlers[0], node);\n  } else {\n    this.print(node.handler, node);\n  }\n\n  if (node.finalizer) {\n    this.space();\n    this.word(\"finally\");\n    this.space();\n    this.print(node.finalizer, node);\n  }\n}\n\nfunction CatchClause(node) {\n  this.word(\"catch\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.param, node);\n  this.token(\")\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction SwitchStatement(node) {\n  this.word(\"switch\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.discriminant, node);\n  this.token(\")\");\n  this.space();\n  this.token(\"{\");\n\n  this.printSequence(node.cases, node, {\n    indent: true,\n    addNewlines: function addNewlines(leading, cas) {\n      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;\n    }\n  });\n\n  this.token(\"}\");\n}\n\nfunction SwitchCase(node) {\n  if (node.test) {\n    this.word(\"case\");\n    this.space();\n    this.print(node.test, node);\n    this.token(\":\");\n  } else {\n    this.word(\"default\");\n    this.token(\":\");\n  }\n\n  if (node.consequent.length) {\n    this.newline();\n    this.printSequence(node.consequent, node, { indent: true });\n  }\n}\n\nfunction DebuggerStatement() {\n  this.word(\"debugger\");\n  this.semicolon();\n}\n\nfunction variableDeclarationIdent() {\n  this.token(\",\");\n  this.newline();\n  if (this.endsWith(\"\\n\")) for (var i = 0; i < 4; i++) {\n    this.space(true);\n  }\n}\n\nfunction constDeclarationIdent() {\n  this.token(\",\");\n  this.newline();\n  if (this.endsWith(\"\\n\")) for (var i = 0; i < 6; i++) {\n    this.space(true);\n  }\n}\n\nfunction VariableDeclaration(node, parent) {\n  this.word(node.kind);\n  this.space();\n\n  var hasInits = false;\n\n  if (!t.isFor(parent)) {\n    for (var _iterator = node.declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var declar = _ref;\n\n      if (declar.init) {\n        hasInits = true;\n      }\n    }\n  }\n\n  var separator = void 0;\n  if (hasInits) {\n    separator = node.kind === \"const\" ? constDeclarationIdent : variableDeclarationIdent;\n  }\n\n  this.printList(node.declarations, node, { separator: separator });\n\n  if (t.isFor(parent)) {\n    if (parent.left === node || parent.init === node) return;\n  }\n\n  this.semicolon();\n}\n\nfunction VariableDeclarator(node) {\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  if (node.init) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.init, node);\n  }\n}"]}