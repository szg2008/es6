{"version":3,"sources":["amdefine.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;AACA;AACA;;AAEA;;;;;;;;;;;AAUA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,SAA1B,EAAqC;AACjC;;AACA,QAAI,cAAc,EAAlB;AAAA,QACI,cAAc,EADlB;AAAA,QAEI,gBAAgB,KAFpB;AAAA,QAGI,OAAO,QAAQ,MAAR,CAHX;AAAA,QAII,WAJJ;AAAA,QAIiB,cAJjB;;AAMA;;;;;;;;;AASA,aAAS,QAAT,CAAkB,GAAlB,EAAuB;AACnB,YAAI,CAAJ,EAAO,IAAP;AACA,aAAK,IAAI,CAAT,EAAY,IAAI,CAAJ,CAAZ,EAAoB,KAAI,CAAxB,EAA2B;AACvB,mBAAO,IAAI,CAAJ,CAAP;AACA,gBAAI,SAAS,GAAb,EAAkB;AACd,oBAAI,MAAJ,CAAW,CAAX,EAAc,CAAd;AACA,qBAAK,CAAL;AACH,aAHD,MAGO,IAAI,SAAS,IAAb,EAAmB;AACtB,oBAAI,MAAM,CAAN,KAAY,IAAI,CAAJ,MAAW,IAAX,IAAmB,IAAI,CAAJ,MAAW,IAA1C,CAAJ,EAAqD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACH,iBARD,MAQO,IAAI,IAAI,CAAR,EAAW;AACd,wBAAI,MAAJ,CAAW,IAAI,CAAf,EAAkB,CAAlB;AACA,yBAAK,CAAL;AACH;AACJ;AACJ;AACJ;;AAED,aAAS,SAAT,CAAmB,IAAnB,EAAyB,QAAzB,EAAmC;AAC/B,YAAI,SAAJ;;AAEA;AACA,YAAI,QAAQ,KAAK,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC;AAChC;AACA;AACA;AACA,gBAAI,QAAJ,EAAc;AACV,4BAAY,SAAS,KAAT,CAAe,GAAf,CAAZ;AACA,4BAAY,UAAU,KAAV,CAAgB,CAAhB,EAAmB,UAAU,MAAV,GAAmB,CAAtC,CAAZ;AACA,4BAAY,UAAU,MAAV,CAAiB,KAAK,KAAL,CAAW,GAAX,CAAjB,CAAZ;AACA,yBAAS,SAAT;AACA,uBAAO,UAAU,IAAV,CAAe,GAAf,CAAP;AACH;AACJ;;AAED,eAAO,IAAP;AACH;;AAED;;;;AAIA,aAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC5B,eAAO,UAAU,IAAV,EAAgB;AACnB,mBAAO,UAAU,IAAV,EAAgB,OAAhB,CAAP;AACH,SAFD;AAGH;;AAED,aAAS,QAAT,CAAkB,EAAlB,EAAsB;AAClB,iBAAS,IAAT,CAAc,KAAd,EAAqB;AACjB,wBAAY,EAAZ,IAAkB,KAAlB;AACH;;AAED,aAAK,QAAL,GAAgB,UAAU,EAAV,EAAc,IAAd,EAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,kBAAM,IAAI,KAAJ,CAAU,2CAAV,CAAN;AACH,SAPD;;AASA,eAAO,IAAP;AACH;;AAED,kBAAc,qBAAU,aAAV,EAAyB,OAAzB,EAAkC,MAAlC,EAA0C,KAA1C,EAAiD;AAC3D,iBAAS,UAAT,CAAoB,IAApB,EAA0B,QAA1B,EAAoC;AAChC,gBAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACA,uBAAO,eAAc,aAAd,EAA6B,OAA7B,EAAsC,MAAtC,EAA8C,IAA9C,EAAoD,KAApD,CAAP;AACH,aAHD,MAGO;AACH;;AAEA;AACA,uBAAO,KAAK,GAAL,CAAS,UAAU,OAAV,EAAmB;AAC/B,2BAAO,eAAc,aAAd,EAA6B,OAA7B,EAAsC,MAAtC,EAA8C,OAA9C,EAAuD,KAAvD,CAAP;AACH,iBAFM,CAAP;;AAIA;AACA,oBAAI,QAAJ,EAAc;AACV,4BAAQ,QAAR,CAAiB,YAAY;AACzB,iCAAS,KAAT,CAAe,IAAf,EAAqB,IAArB;AACH,qBAFD;AAGH;AACJ;AACJ;;AAED,mBAAW,KAAX,GAAmB,UAAU,QAAV,EAAoB;AACnC,gBAAI,SAAS,OAAT,CAAiB,GAAjB,MAA0B,CAA9B,EAAiC;AAC7B,uBAAO,UAAU,QAAV,EAAoB,KAAK,OAAL,CAAa,OAAO,QAApB,CAApB,CAAP;AACH,aAFD,MAEO;AACH,uBAAO,QAAP;AACH;AACJ,SAND;;AAQA,eAAO,UAAP;AACH,KA/BD;;AAiCA;AACA,gBAAY,aAAa,SAAS,GAAT,GAAe;AACpC,eAAO,OAAO,OAAP,CAAe,KAAf,CAAqB,MAArB,EAA6B,SAA7B,CAAP;AACH,KAFD;;AAIA,aAAS,UAAT,CAAoB,EAApB,EAAwB,IAAxB,EAA8B,OAA9B,EAAuC;AACnC,YAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,MAAb;;AAEA,YAAI,EAAJ,EAAQ;AACJ,gBAAI,YAAY,EAAZ,IAAkB,EAAtB;AACA,gBAAI;AACA,oBAAI,EADJ;AAEA,qBAAK,UAFL;AAGA,yBAAS;AAHT,aAAJ;AAKA,gBAAI,YAAY,SAAZ,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,CAAJ;AACH,SARD,MAQO;AACH;AACA,gBAAI,aAAJ,EAAmB;AACf,sBAAM,IAAI,KAAJ,CAAU,sEAAV,CAAN;AACH;AACD,4BAAgB,IAAhB;;AAEA;AACA;AACA;AACA,gBAAI,OAAO,OAAX;AACA,gBAAI,MAAJ;AACA,gBAAI,YAAY,SAAZ,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,OAAO,EAApC,CAAJ;AACH;;AAED;AACA;AACA,YAAI,IAAJ,EAAU;AACN,mBAAO,KAAK,GAAL,CAAS,UAAU,OAAV,EAAmB;AAC/B,uBAAO,EAAE,OAAF,CAAP;AACH,aAFM,CAAP;AAGH;;AAED;AACA,YAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,qBAAS,QAAQ,KAAR,CAAc,EAAE,OAAhB,EAAyB,IAAzB,CAAT;AACH,SAFD,MAEO;AACH,qBAAS,OAAT;AACH;;AAED,YAAI,WAAW,SAAf,EAA0B;AACtB,cAAE,OAAF,GAAY,MAAZ;AACA,gBAAI,EAAJ,EAAQ;AACJ,4BAAY,EAAZ,IAAkB,EAAE,OAApB;AACH;AACJ;AACJ;;AAED,qBAAgB,uBAAU,aAAV,EAAyB,OAAzB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,KAA9C,EAAqD;AACjE;AACA,YAAI,QAAQ,GAAG,OAAH,CAAW,GAAX,CAAZ;AAAA,YACI,aAAa,EADjB;AAAA,YAEI,MAFJ;AAAA,YAEY,MAFZ;;AAIA,YAAI,UAAU,CAAC,CAAf,EAAkB;AACd,iBAAK,UAAU,EAAV,EAAc,KAAd,CAAL;;AAEA;AACA;AACA,gBAAI,OAAO,SAAX,EAAsB;AAClB,uBAAO,YAAY,aAAZ,EAA2B,OAA3B,EAAoC,MAApC,EAA4C,KAA5C,CAAP;AACH,aAFD,MAEO,IAAI,OAAO,SAAX,EAAsB;AACzB,uBAAO,OAAP;AACH,aAFM,MAEA,IAAI,OAAO,QAAX,EAAqB;AACxB,uBAAO,MAAP;AACH,aAFM,MAEA,IAAI,YAAY,cAAZ,CAA2B,EAA3B,CAAJ,EAAoC;AACvC,uBAAO,YAAY,EAAZ,CAAP;AACH,aAFM,MAEA,IAAI,YAAY,EAAZ,CAAJ,EAAqB;AACxB,2BAAW,KAAX,CAAiB,IAAjB,EAAuB,YAAY,EAAZ,CAAvB;AACA,uBAAO,YAAY,EAAZ,CAAP;AACH,aAHM,MAGA;AACH,oBAAG,aAAH,EAAkB;AACd,2BAAO,cAAc,UAAd,CAAP;AACH,iBAFD,MAEO;AACH,0BAAM,IAAI,KAAJ,CAAU,wBAAwB,EAAlC,CAAN;AACH;AACJ;AACJ,SAvBD,MAuBO;AACH;AACA,qBAAS,GAAG,SAAH,CAAa,CAAb,EAAgB,KAAhB,CAAT;AACA,iBAAK,GAAG,SAAH,CAAa,QAAQ,CAArB,EAAwB,GAAG,MAA3B,CAAL;;AAEA,qBAAS,eAAc,aAAd,EAA6B,OAA7B,EAAsC,MAAtC,EAA8C,MAA9C,EAAsD,KAAtD,CAAT;;AAEA,gBAAI,OAAO,SAAX,EAAsB;AAClB,qBAAK,OAAO,SAAP,CAAiB,EAAjB,EAAqB,cAAc,KAAd,CAArB,CAAL;AACH,aAFD,MAEO;AACH;AACA,qBAAK,UAAU,EAAV,EAAc,KAAd,CAAL;AACH;;AAED,gBAAI,YAAY,EAAZ,CAAJ,EAAqB;AACjB,uBAAO,YAAY,EAAZ,CAAP;AACH,aAFD,MAEO;AACH,uBAAO,IAAP,CAAY,EAAZ,EAAgB,YAAY,aAAZ,EAA2B,OAA3B,EAAoC,MAApC,EAA4C,KAA5C,CAAhB,EAAoE,SAAS,EAAT,CAApE,EAAkF,EAAlF;;AAEA,uBAAO,YAAY,EAAZ,CAAP;AACH;AACJ;AACJ,KAnDD;;AAqDA;AACA,aAAS,MAAT,CAAgB,EAAhB,EAAoB,IAApB,EAA0B,OAA1B,EAAmC;AAC/B,YAAI,MAAM,OAAN,CAAc,EAAd,CAAJ,EAAuB;AACnB,sBAAU,IAAV;AACA,mBAAO,EAAP;AACA,iBAAK,SAAL;AACH,SAJD,MAIO,IAAI,OAAO,EAAP,KAAc,QAAlB,EAA4B;AAC/B,sBAAU,EAAV;AACA,iBAAK,OAAO,SAAZ;AACH;;AAED,YAAI,QAAQ,CAAC,MAAM,OAAN,CAAc,IAAd,CAAb,EAAkC;AAC9B,sBAAU,IAAV;AACA,mBAAO,SAAP;AACH;;AAED,YAAI,CAAC,IAAL,EAAW;AACP,mBAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,CAAP;AACH;;AAED;AACA;AACA;AACA,YAAI,EAAJ,EAAQ;AACJ;AACA;AACA,wBAAY,EAAZ,IAAkB,CAAC,EAAD,EAAK,IAAL,EAAW,OAAX,CAAlB;AACH,SAJD,MAIO;AACH,uBAAW,EAAX,EAAe,IAAf,EAAqB,OAArB;AACH;AACJ;;AAED;AACA;AACA;AACA;AACA,WAAO,OAAP,GAAiB,UAAU,EAAV,EAAc;AAC3B,YAAI,YAAY,EAAZ,CAAJ,EAAqB;AACjB,mBAAO,YAAY,EAAZ,CAAP;AACH;;AAED,YAAI,YAAY,EAAZ,CAAJ,EAAqB;AACjB,uBAAW,KAAX,CAAiB,IAAjB,EAAuB,YAAY,EAAZ,CAAvB;AACA,mBAAO,YAAY,EAAZ,CAAP;AACH;AACJ,KATD;;AAWA,WAAO,GAAP,GAAa,EAAb;;AAEA,WAAO,MAAP;AACH;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"amdefine-compiled.js","sourcesContent":["/** vim: et:ts=4:sw=4:sts=4\n * @license amdefine 1.0.1 Copyright (c) 2011-2016, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/amdefine for details\n */\n\n/*jslint node: true */\n/*global module, process */\n'use strict';\n\n/**\n * Creates a define for node.\n * @param {Object} module the \"module\" object that is defined by Node for the\n * current module.\n * @param {Function} [requireFn]. Node's require function for the current module.\n * It only needs to be passed in Node versions before 0.5, when module.require\n * did not exist.\n * @returns {Function} a define function that is usable for the current node\n * module.\n */\nfunction amdefine(module, requireFn) {\n    'use strict';\n    var defineCache = {},\n        loaderCache = {},\n        alreadyCalled = false,\n        path = require('path'),\n        makeRequire, stringRequire;\n\n    /**\n     * Trims the . and .. from an array of path segments.\n     * It will keep a leading path segment if a .. will become\n     * the first path segment, to help with module name lookups,\n     * which act like paths, but can be remapped. But the end result,\n     * all paths that use this function should look normalized.\n     * NOTE: this method MODIFIES the input array.\n     * @param {Array} ary the array of path segments.\n     */\n    function trimDots(ary) {\n        var i, part;\n        for (i = 0; ary[i]; i+= 1) {\n            part = ary[i];\n            if (part === '.') {\n                ary.splice(i, 1);\n                i -= 1;\n            } else if (part === '..') {\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                    //End of the line. Keep at least one non-dot\n                    //path segment at the front so it can be mapped\n                    //correctly to disk. Otherwise, there is likely\n                    //no path mapping for a path starting with '..'.\n                    //This can still fail, but catches the most reasonable\n                    //uses of ..\n                    break;\n                } else if (i > 0) {\n                    ary.splice(i - 1, 2);\n                    i -= 2;\n                }\n            }\n        }\n    }\n\n    function normalize(name, baseName) {\n        var baseParts;\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === '.') {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                baseParts = baseName.split('/');\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                baseParts = baseParts.concat(name.split('/'));\n                trimDots(baseParts);\n                name = baseParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    /**\n     * Create the normalize() function passed to a loader plugin's\n     * normalize method.\n     */\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(id) {\n        function load(value) {\n            loaderCache[id] = value;\n        }\n\n        load.fromText = function (id, text) {\n            //This one is difficult because the text can/probably uses\n            //define, and any relative paths and requires should be relative\n            //to that id was it would be found on disk. But this would require\n            //bootstrapping a module/require fairly deeply from node core.\n            //Not sure how best to go about that yet.\n            throw new Error('amdefine does not implement load.fromText');\n        };\n\n        return load;\n    }\n\n    makeRequire = function (systemRequire, exports, module, relId) {\n        function amdRequire(deps, callback) {\n            if (typeof deps === 'string') {\n                //Synchronous, single module require('')\n                return stringRequire(systemRequire, exports, module, deps, relId);\n            } else {\n                //Array of dependencies with a callback.\n\n                //Convert the dependencies to modules.\n                deps = deps.map(function (depName) {\n                    return stringRequire(systemRequire, exports, module, depName, relId);\n                });\n\n                //Wait for next tick to call back the require call.\n                if (callback) {\n                    process.nextTick(function () {\n                        callback.apply(null, deps);\n                    });\n                }\n            }\n        }\n\n        amdRequire.toUrl = function (filePath) {\n            if (filePath.indexOf('.') === 0) {\n                return normalize(filePath, path.dirname(module.filename));\n            } else {\n                return filePath;\n            }\n        };\n\n        return amdRequire;\n    };\n\n    //Favor explicit value, passed in if the module wants to support Node 0.4.\n    requireFn = requireFn || function req() {\n        return module.require.apply(module, arguments);\n    };\n\n    function runFactory(id, deps, factory) {\n        var r, e, m, result;\n\n        if (id) {\n            e = loaderCache[id] = {};\n            m = {\n                id: id,\n                uri: __filename,\n                exports: e\n            };\n            r = makeRequire(requireFn, e, m, id);\n        } else {\n            //Only support one define call per file\n            if (alreadyCalled) {\n                throw new Error('amdefine with no module ID cannot be called more than once per file.');\n            }\n            alreadyCalled = true;\n\n            //Use the real variables from node\n            //Use module.exports for exports, since\n            //the exports in here is amdefine exports.\n            e = module.exports;\n            m = module;\n            r = makeRequire(requireFn, e, m, module.id);\n        }\n\n        //If there are dependencies, they are strings, so need\n        //to convert them to dependency values.\n        if (deps) {\n            deps = deps.map(function (depName) {\n                return r(depName);\n            });\n        }\n\n        //Call the factory with the right dependencies.\n        if (typeof factory === 'function') {\n            result = factory.apply(m.exports, deps);\n        } else {\n            result = factory;\n        }\n\n        if (result !== undefined) {\n            m.exports = result;\n            if (id) {\n                loaderCache[id] = m.exports;\n            }\n        }\n    }\n\n    stringRequire = function (systemRequire, exports, module, id, relId) {\n        //Split the ID by a ! so that\n        var index = id.indexOf('!'),\n            originalId = id,\n            prefix, plugin;\n\n        if (index === -1) {\n            id = normalize(id, relId);\n\n            //Straight module lookup. If it is one of the special dependencies,\n            //deal with it, otherwise, delegate to node.\n            if (id === 'require') {\n                return makeRequire(systemRequire, exports, module, relId);\n            } else if (id === 'exports') {\n                return exports;\n            } else if (id === 'module') {\n                return module;\n            } else if (loaderCache.hasOwnProperty(id)) {\n                return loaderCache[id];\n            } else if (defineCache[id]) {\n                runFactory.apply(null, defineCache[id]);\n                return loaderCache[id];\n            } else {\n                if(systemRequire) {\n                    return systemRequire(originalId);\n                } else {\n                    throw new Error('No module with ID: ' + id);\n                }\n            }\n        } else {\n            //There is a plugin in play.\n            prefix = id.substring(0, index);\n            id = id.substring(index + 1, id.length);\n\n            plugin = stringRequire(systemRequire, exports, module, prefix, relId);\n\n            if (plugin.normalize) {\n                id = plugin.normalize(id, makeNormalize(relId));\n            } else {\n                //Normalize the ID normally.\n                id = normalize(id, relId);\n            }\n\n            if (loaderCache[id]) {\n                return loaderCache[id];\n            } else {\n                plugin.load(id, makeRequire(systemRequire, exports, module, relId), makeLoad(id), {});\n\n                return loaderCache[id];\n            }\n        }\n    };\n\n    //Create a define function specific to the module asking for amdefine.\n    function define(id, deps, factory) {\n        if (Array.isArray(id)) {\n            factory = deps;\n            deps = id;\n            id = undefined;\n        } else if (typeof id !== 'string') {\n            factory = id;\n            id = deps = undefined;\n        }\n\n        if (deps && !Array.isArray(deps)) {\n            factory = deps;\n            deps = undefined;\n        }\n\n        if (!deps) {\n            deps = ['require', 'exports', 'module'];\n        }\n\n        //Set up properties for this module. If an ID, then use\n        //internal cache. If no ID, then use the external variables\n        //for this node module.\n        if (id) {\n            //Put the module in deep freeze until there is a\n            //require call for it.\n            defineCache[id] = [id, deps, factory];\n        } else {\n            runFactory(id, deps, factory);\n        }\n    }\n\n    //define.require, which has access to all the values in the\n    //cache. Useful for AMD modules that all have IDs in the file,\n    //but need to finally export a value to node based on one of those\n    //IDs.\n    define.require = function (id) {\n        if (loaderCache[id]) {\n            return loaderCache[id];\n        }\n\n        if (defineCache[id]) {\n            runFactory.apply(null, defineCache[id]);\n            return loaderCache[id];\n        }\n    };\n\n    define.amd = {};\n\n    return define;\n}\n\nmodule.exports = amdefine;\n"]}