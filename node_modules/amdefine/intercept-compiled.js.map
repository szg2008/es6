{"version":3,"sources":["intercept.js"],"names":[],"mappings":";;AAAA;AACA,IAAI,QAAJ;AAAA,IACI,SAAS,QAAQ,QAAR,CADb;AAAA,IAEI,KAAK,QAAQ,IAAR,CAFT;AAAA,IAGI,gBAAgB,OAAO,WAAP,CAAmB,KAAnB,CAHpB;AAAA,IAII,iBAAiB,cAJrB;;AAMA,WAAY,8EAAZ;;AAEA;AACA,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AACvB;AACA;AACA;AACA,QAAI,QAAQ,UAAR,CAAmB,CAAnB,MAA0B,MAA9B,EAAsC;AAClC,kBAAU,QAAQ,KAAR,CAAc,CAAd,CAAV;AACH;AACD,WAAO,OAAP;AACH;;AAED;AACA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC;AACjC,QAAI,UAAU,SAAS,GAAG,YAAH,CAAgB,QAAhB,EAA0B,MAA1B,CAAT,CAAd;;AAEA,QAAI,CAAC,eAAe,IAAf,CAAoB,OAAO,EAA3B,CAAL,EAAqC;AACjC,kBAAU,WAAW,OAArB;AACH;;AAED,WAAO,QAAP,CAAgB,OAAhB,EAAyB,QAAzB;AACH;;AAED,UAAU,GAAV,GAAgB,oBAAhB;;AAEA,IAAI,CAAC,cAAc,GAAf,IAAsB,cAAc,GAAd,KAAsB,UAAU,GAA1D,EAA+D;AAC3D,WAAO,WAAP,CAAmB,KAAnB,IAA4B,SAA5B;AACH","file":"intercept-compiled.js","sourcesContent":["/*jshint node: true */\nvar inserted,\n    Module = require('module'),\n    fs = require('fs'),\n    existingExtFn = Module._extensions['.js'],\n    amdefineRegExp = /amdefine\\.js/;\n\ninserted  = \"if (typeof define !== 'function') {var define = require('amdefine')(module)}\";\n\n//From the node/lib/module.js source:\nfunction stripBOM(content) {\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xFEFF) {\n        content = content.slice(1);\n    }\n    return content;\n}\n\n//Also adapted from the node/lib/module.js source:\nfunction intercept(module, filename) {\n    var content = stripBOM(fs.readFileSync(filename, 'utf8'));\n\n    if (!amdefineRegExp.test(module.id)) {\n        content = inserted + content;\n    }\n\n    module._compile(content, filename);\n}\n\nintercept._id = 'amdefine/intercept';\n\nif (!existingExtFn._id || existingExtFn._id !== intercept._id) {\n    Module._extensions['.js'] = intercept;\n}\n"]}