{"version":3,"sources":["build.js"],"names":[],"mappings":";;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,cAAc,QAAQ,aAAR,CAAlB;AACA,IAAI,gBAAgB,QAAQ,eAAR,CAApB;;AAEA,IAAI,aAAa,KAAK,IAAL,CAAU,cAAV,EAA0B,MAA1B,EAAkC,YAAlC,CAAjB;AACA,IAAI,SAAS,KAAK,IAAL,CAAU,cAAV,EAA0B,MAA1B,EAAkC,QAAlC,CAAb;;AAEA,SAAS,GAAT,CAAa,OAAb,EAAsB,QAAtB,EAAgC;AAC9B,UAAQ,GAAR,CAAY,OAAZ;AACA,gBAAc,IAAd,CAAmB,OAAnB,EAA4B,QAA5B;AACD;;AAED;AACA,GAAG,aAAH,CAAiB,UAAjB,EAA6B,qDAA7B;AACA,IAAI,aAAa,WAAjB,EAA8B,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AACpD,MAAI,KAAJ,EAAW,MAAM,KAAN;;AAEX;AACA,MAAI,SAAS,CACX,IADW,EAEX,+CAFW,EAGX,qDAHW,EAIX,KAJW,EAKX,IALW,CAKN,IALM,CAAb;AAMA,MAAI,OAAO,CACT,oJADS,EAET,OAAO,OAAP,CAAe,WAAf,EAA4B,MAA5B,EAAoC,OAApC,CAA4C,IAAI,MAAJ,CAAW,YAAY,GAAvB,EAA4B,GAA5B,CAA5C,EAA8E,EAA9E,EAAkF,OAAlF,CAA0F,WAA1F,EAAuG,SAAvG,CAFS,EAGT,4BAHS,EAIT,IAJS,CAIJ,IAJI,CAAX;;AAMA;AACA,KAAG,aAAH,CAAiB,UAAjB,EAA6B,YAAY,SAAZ,CAAsB;AACjD,uBAAmB,sBAD8B;AAEjD,iBAAa,eAFoC;AAGjD,mBAAe,MAHkC;AAIjD,aAAS;AAJwC,GAAtB,CAA7B;AAMA,MAAI,iEAAJ,EAAuE,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAC7F,QAAI,KAAJ,EAAW,MAAM,KAAN;AACX,QAAI,OAAO,SAAS,IAAT,GAAgB,MAA3B;AACA,OAAG,UAAH,CAAc,UAAd;AACA,OAAG,aAAH,CAAiB,+BAAjB,EAAkD,IAAlD;AACA,OAAG,aAAH,CAAiB,wCAAjB,EAA2D,IAA3D;AACD,GAND;AAOD,CA9BD;;AAgCA;AACA,IAAI,SAAS,yCAAb,EAAwD,UAAS,KAAT,EAAgB;AACtE,MAAI,KAAJ,EAAW,MAAM,KAAN;AACZ,CAFD;;AAIA;AACA,IAAI,SAAS,gDAAb,EAA+D,UAAS,KAAT,EAAgB;AAC7E,MAAI,KAAJ,EAAW,MAAM,KAAN;AACX,MAAI,aAAa,kEAAjB,EAAqF,UAAS,KAAT,EAAgB;AACnG,QAAI,KAAJ,EAAW,MAAM,KAAN;AACZ,GAFD;AAGD,CALD;;AAOA;AACA,IAAI,SAAS,6CAAb,EAA4D,UAAS,KAAT,EAAgB;AAC1E,MAAI,KAAJ,EAAW,MAAM,KAAN;AACZ,CAFD;;AAIA;AACA,IAAI,SAAS,4CAAb,EAA2D,UAAS,KAAT,EAAgB;AACzE,MAAI,KAAJ,EAAW,MAAM,KAAN;AACX,MAAI,WAAW,GAAG,YAAH,CAAgB,uBAAhB,EAAyC,MAAzC,CAAf;AACA,KAAG,aAAH,CAAiB,uBAAjB,EAA0C,SAAS,OAAT,CAAiB,4BAAjB,EAA+C,EAA/C,CAA1C;AACD,CAJD","file":"build-compiled.js","sourcesContent":["\n\nvar fs = require('fs');\nvar path = require('path');\nvar querystring = require('querystring');\nvar child_process = require('child_process');\n\nvar browserify = path.join('node_modules', '.bin', 'browserify');\nvar coffee = path.join('node_modules', '.bin', 'coffee');\n\nfunction run(command, callback) {\n  console.log(command);\n  child_process.exec(command, callback);\n}\n\n// Use browserify to package up source-map-support.js\nfs.writeFileSync('.temp.js', 'sourceMapSupport = require(\"./source-map-support\");');\nrun(browserify + ' .temp.js', function(error, stdout) {\n  if (error) throw error;\n\n  // Wrap the code so it works both as a normal <script> module and as an AMD module\n  var header = [\n    '/*',\n    ' * Support for source maps in V8 stack traces',\n    ' * https://github.com/evanw/node-source-map-support',\n    ' */',\n  ].join('\\n');\n  var code = [\n    '(this[\"define\"] || function(name, callback) { this[\"sourceMapSupport\"] = callback(); })(\"browser-source-map-support\", function(sourceMapSupport) {',\n    stdout.replace(/\\bbyte\\b/g, 'bite').replace(new RegExp(__dirname + '/', 'g'), '').replace(/@license/g, 'license'),\n    'return sourceMapSupport});',\n  ].join('\\n');\n\n  // Use the online Google Closure Compiler service for minification\n  fs.writeFileSync('.temp.js', querystring.stringify({\n    compilation_level: 'SIMPLE_OPTIMIZATIONS',\n    output_info: 'compiled_code',\n    output_format: 'text',\n    js_code: code\n  }));\n  run('curl -d @.temp.js \"http://closure-compiler.appspot.com/compile\"', function(error, stdout) {\n    if (error) throw error;\n    var code = header + '\\n' + stdout;\n    fs.unlinkSync('.temp.js');\n    fs.writeFileSync('browser-source-map-support.js', code);\n    fs.writeFileSync('amd-test/browser-source-map-support.js', code);\n  });\n});\n\n// Build the AMD test\nrun(coffee + ' --map --compile amd-test/script.coffee', function(error) {\n  if (error) throw error;\n});\n\n// Build the browserify test\nrun(coffee + ' --map --compile browserify-test/script.coffee', function(error) {\n  if (error) throw error;\n  run(browserify + ' --debug browserify-test/script.js > browserify-test/compiled.js', function(error) {\n    if (error) throw error;\n  })\n});\n\n// Build the browser test\nrun(coffee + ' --map --compile browser-test/script.coffee', function(error) {\n  if (error) throw error;\n});\n\n// Build the header test\nrun(coffee + ' --map --compile header-test/script.coffee', function(error) {\n  if (error) throw error;\n  var contents = fs.readFileSync('header-test/script.js', 'utf8');\n  fs.writeFileSync('header-test/script.js', contents.replace(/\\/\\/# sourceMappingURL=.*/g, ''))\n});\n"]}