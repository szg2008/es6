{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var assign = require(\"object-assign\");\nvar stream = require(\"stream\");\nvar babel  = require(\"babel-core\");\nvar util   = require(\"util\");\n\nmodule.exports = Babelify;\nutil.inherits(Babelify, stream.Transform);\n\nfunction Babelify(filename, opts) {\n  if (!(this instanceof Babelify)) {\n    return Babelify.configure(opts)(filename);\n  }\n\n  stream.Transform.call(this);\n  this._data = \"\";\n  this._filename = filename;\n  this._opts = assign({filename: filename}, opts);\n}\n\nBabelify.prototype._transform = function (buf, enc, callback) {\n  this._data += buf;\n  callback();\n};\n\nBabelify.prototype._flush = function (callback) {\n  try {\n    var result = babel.transform(this._data, this._opts);\n    this.emit(\"babelify\", result, this._filename);\n    var code = result.code;\n    this.push(code);\n  } catch(err) {\n    this.emit(\"error\", err);\n    return;\n  }\n  callback();\n};\n\nBabelify.configure = function (opts) {\n  opts = assign({}, opts);\n  var extensions = opts.extensions ? babel.util.arrayify(opts.extensions) : null;\n  var sourceMapsAbsolute = opts.sourceMapsAbsolute;\n  if (opts.sourceMaps !== false) opts.sourceMaps = \"inline\";\n\n  // babelify specific options\n  delete opts.sourceMapsAbsolute;\n  delete opts.extensions;\n  delete opts.filename;\n\n  // babelify backwards-compat\n  delete opts.sourceMapRelative;\n\n  // browserify specific options\n  delete opts._flags;\n  delete opts.basedir;\n  delete opts.global;\n\n  // browserify cli options\n  delete opts._;\n  // \"--opt [ a b ]\" and \"--opt a --opt b\" are allowed:\n  if (opts.ignore && opts.ignore._) opts.ignore = opts.ignore._;\n  if (opts.only && opts.only._) opts.only = opts.only._;\n  if (opts.plugins && opts.plugins._) opts.plugins = opts.plugins._;\n  if (opts.presets && opts.presets._) opts.presets = opts.presets._;\n\n  return function (filename) {\n    if (!babel.util.canCompile(filename, extensions)) {\n      return stream.PassThrough();\n    }\n\n    var _opts = sourceMapsAbsolute\n      ? assign({sourceFileName: filename}, opts)\n      : opts;\n\n    return new Babelify(filename, _opts);\n  };\n};\n"]}